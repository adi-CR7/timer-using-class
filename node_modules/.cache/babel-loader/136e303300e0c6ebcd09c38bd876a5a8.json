{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\01-starting-setup\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import ReactDOM from 'react-dom';\n\nimport './index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stopwatch extends Component {\n  constructor() {\n    super();\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        const newTime = this.state.timerTime - 10;\n\n        if (newTime >= 0) {\n          this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            timerOn: false\n          });\n          alert(\"Countdown ended\");\n        }\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          timerTime: this.state.timerStart\n        });\n      }\n    };\n\n    this.adjustTimer = input => {\n      const {\n        timerTime,\n        timerOn\n      } = this.state;\n      const max = 216000000;\n\n      if (!timerOn) {\n        if (input === \"incHours\" && timerTime + 3600000 < max) {\n          this.setState({\n            timerTime: timerTime + 3600000\n          });\n        } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 3600000\n          });\n        } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n          this.setState({\n            timerTime: timerTime + 60000\n          });\n        } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 60000\n          });\n        } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n          this.setState({\n            timerTime: timerTime + 1000\n          });\n        } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 1000\n          });\n        }\n      }\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n  }\n\n  render() {\n    const {\n      timerTime,\n      timerStart,\n      timerOn\n    } = this.state;\n    let seconds = (\"0\" + Math.floor(timerTime / 1000 % 60) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000 % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000 % 60)).slice(-2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Countdown-time\",\n        children: [hours, \" : \", minutes, \" : \", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Countdown-label\",\n        children: \"Hours : Minutes : Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Countdown-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"incHours\"),\n          children: \"\\u21E7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"incMinutes\"),\n          children: \"\\u21E7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"incSeconds\"),\n          children: \"\\u21E7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"decHours\"),\n          children: \"\\u21E9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"decMinutes\"),\n          children: \"\\u21E9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"decSeconds\"),\n          children: \"\\u21E9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/01-starting-setup/src/App.js"],"names":["React","Component","Stopwatch","constructor","startTimer","setState","timerOn","timerTime","state","timerStart","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","max","render","seconds","Math","floor","slice","minutes","hours"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.js';\n\nclass Stopwatch extends Component {\n    constructor() {\n        super()\n        this.state = {\n            timerOn: false,\n            timerStart: 0,\n            timerTime: 0\n        }\n    }\n\n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n            timerStart: this.state.timerTime\n        });\n        this.timer = setInterval(() => {\n            const newTime = this.state.timerTime - 10;\n            if (newTime >= 0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({ timerOn: false });\n                alert(\"Countdown ended\");\n            }\n        }, 10);\n    };\n    \n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n    };\n    resetTimer = () => {\n        if (this.state.timerOn === false) {\n            this.setState({\n                timerTime: this.state.timerStart\n            });\n        }\n    };\n    \n    adjustTimer = input => {\n        const { timerTime, timerOn } = this.state;\n        const max = 216000000;\n        if (!timerOn) {\n            if (input === \"incHours\" && timerTime + 3600000 < max) {\n                this.setState({ timerTime: timerTime + 3600000 });\n            } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n                this.setState({ timerTime: timerTime - 3600000 });\n            } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n                this.setState({ timerTime: timerTime + 60000 });\n            } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n                this.setState({ timerTime: timerTime - 60000 });\n            } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n                this.setState({ timerTime: timerTime + 1000 });\n            } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n                this.setState({ timerTime: timerTime - 1000 });\n            }\n        }\n    };\n\n    \n    render() {\n        const { timerTime, timerStart, timerOn } = this.state;\n        let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n        let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\n\n\n\n\n        return (\n            <div>\n                <div className=\"Countdown-time\">\n  {hours} : {minutes} : {seconds}\n</div>\n                <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\n                <div className=\"Countdown-display\">\n                    <button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>\n                    <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n                    <button onClick={() => this.adjustTimer(\"incSeconds\")}>&#8679;</button>\n                    <button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>\n                    <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n                    <button onClick={() => this.adjustTimer(\"decSeconds\")}>&#8681;</button>\n                </div>\n            </div>)\n\n            \n    }\n}\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}