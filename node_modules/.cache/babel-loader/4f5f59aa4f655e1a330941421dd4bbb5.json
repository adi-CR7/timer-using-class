{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\01-starting-setup\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import ReactDOM from 'react-dom';\n\nimport './index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stopwatch extends Component {\n  constructor() {\n    super();\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          timerTime: Date.now() - this.state.timerStart\n        });\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        timerStart: 0,\n        timerTime: 0\n      });\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n  }\n\n  render() {\n    const {\n      timerTime\n    } = this.state;\n    let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n    let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2); //    const [count,setCount]=useState(0);\n    //    const [seconds,setSeconds]=useState('00.00');\n    //    const [minutes,setMinutes]=useState('00');\n    //    const [start,setStart]=useState(false);\n    //    const [split,setSplit]=useState([])\n    //    useEffect(() => {\n    //        let intervalId;\n    //        if(start){\n    //       intervalId=setInterval(()=>{\n    //            setCount(count=>count+1);\n    //            var sec=(count/100)\n    //            var min=Math.floor(sec/60)\n    //            sec=sec%60;\n    //            setSeconds(sec.toFixed(2).toString().padStart(5,'0'));\n    //            setMinutes(min.toString().padStart(2,'0'));\n    //       },10);\n    //     }\n    //        return () => {\n    //            clearInterval(intervalId);\n    //        }\n    //    }, [count,seconds,minutes,start])\n    // function handleSplit(){\n    //     const add=minutes+\":\"+seconds;\n    //     if(split[split.length-1]!==add)\n    //     setSplit(split=>[...split,add]);\n    // }\n    // function handleReset(){\n    //     setCount(0);\n    //     setSplit([]);\n    //     setSeconds('00.00');\n    //     setMinutes('00');\n    //     setStart(false)\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Stopwatch-display\",\n        children: [hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), this.state.timerOn === false && this.state.timerTime === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 3\n      }, this), this.state.timerOn === true && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 3\n      }, this), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.startTimer,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 3\n      }, this), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/01-starting-setup/src/App.js"],"names":["React","Component","Stopwatch","constructor","startTimer","setState","timerOn","timerTime","state","timerStart","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","render","centiseconds","Math","floor","slice","seconds","minutes","hours"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.js';\n\nclass Stopwatch extends Component{\n    constructor() {\n        super()\n        this.state = {  \n  timerOn: false,\n  timerStart: 0,\n  timerTime: 0\n        }\n    }\n\nstartTimer = () => {\n  this.setState({\n    timerOn: true,\n    timerTime: this.state.timerTime,\n    timerStart: Date.now() - this.state.timerTime\n  });\n  this.timer = setInterval(() => {\n    this.setState({\n      timerTime: Date.now() - this.state.timerStart\n    });\n  }, 10);\n};\n    \n    stopTimer = () => {\n  this.setState({ timerOn: false });\n  clearInterval(this.timer);\n};\nresetTimer = () => {\n  this.setState({\n    timerStart: 0,\n    timerTime: 0\n  });\n};\n\n    \n  render(){\n        const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n\n//    const [count,setCount]=useState(0);\n//    const [seconds,setSeconds]=useState('00.00');\n//    const [minutes,setMinutes]=useState('00');\n//    const [start,setStart]=useState(false);\n//    const [split,setSplit]=useState([])\n      \n   \n\n//    useEffect(() => {\n//        let intervalId;\n//        if(start){\n//       intervalId=setInterval(()=>{\n//            setCount(count=>count+1);\n//            var sec=(count/100)\n//            var min=Math.floor(sec/60)\n//            sec=sec%60;\n\n//            setSeconds(sec.toFixed(2).toString().padStart(5,'0'));\n//            setMinutes(min.toString().padStart(2,'0'));\n//       },10);\n//     }\n//        return () => {\n//            clearInterval(intervalId);\n//        }\n//    }, [count,seconds,minutes,start])\n  \n\n    // function handleSplit(){\n        \n    //     const add=minutes+\":\"+seconds;\n    //     if(split[split.length-1]!==add)\n    //     setSplit(split=>[...split,add]);\n        \n    // }\n    // function handleReset(){\n       \n    //     setCount(0);\n    //     setSplit([]);\n    //     setSeconds('00.00');\n    //     setMinutes('00');\n    //     setStart(false)\n        \n    // }\n\n\n    return(\n        <div>\n            {/* <h1>Stop Watch</h1>\n            <hr/>\n            <p className=\"stopwatch\">{minutes}:{seconds}</p>\n            <center>\n                <button className=\"Reset\" onClick={handleReset}>Reset</button>\n\n                <button  className=\"Split\"onClick={handleSplit}>Split</button>\n                \n                <button className=\"Start\"onClick={()=>setStart(!start)}>{start?'Pause':'Start'}</button>\n                </center>\n                <div >\n            {split.map(s=><p className=\"arr\">{s}</p>)}</div> */}\n            <div className=\"Stopwatch-display\">\n  {hours} : {minutes} : {seconds} : {centiseconds}\n            </div>\n            {this.state.timerOn === false && this.state.timerTime === 0 && (\n  <button onClick={this.startTimer}>Start</button>\n)}\n{this.state.timerOn === true && (\n  <button onClick={this.stopTimer}>Stop</button>\n)}\n{this.state.timerOn === false && this.state.timerTime > 0 && (\n  <button onClick={this.startTimer}>Resume</button>\n)}\n{this.state.timerOn === false && this.state.timerTime > 0 && (\n  <button onClick={this.resetTimer}>Reset</button>\n)}\n        </div>\n    );\n}\n}\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}