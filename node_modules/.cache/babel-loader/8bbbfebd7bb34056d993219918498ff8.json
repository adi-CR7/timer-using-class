{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\01-starting-setup\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import ReactDOM from 'react-dom';\n\nimport './index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stopwatch extends React.Component {\n  constructor() {\n    super();\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          timerTime: Date.now() - this.state.timerStart\n        });\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        timerStart: 0,\n        timerTime: 0\n      });\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n  }\n\n  render() {\n    //    const [count,setCount]=useState(0);\n    //    const [seconds,setSeconds]=useState('00.00');\n    //    const [minutes,setMinutes]=useState('00');\n    //    const [start,setStart]=useState(false);\n    //    const [split,setSplit]=useState([])\n    //    useEffect(() => {\n    //        let intervalId;\n    //        if(start){\n    //       intervalId=setInterval(()=>{\n    //            setCount(count=>count+1);\n    //            var sec=(count/100)\n    //            var min=Math.floor(sec/60)\n    //            sec=sec%60;\n    //            setSeconds(sec.toFixed(2).toString().padStart(5,'0'));\n    //            setMinutes(min.toString().padStart(2,'0'));\n    //       },10);\n    //     }\n    //        return () => {\n    //            clearInterval(intervalId);\n    //        }\n    //    }, [count,seconds,minutes,start])\n    // function handleSplit(){\n    //     const add=minutes+\":\"+seconds;\n    //     if(split[split.length-1]!==add)\n    //     setSplit(split=>[...split,add]);\n    // }\n    // function handleReset(){\n    //     setCount(0);\n    //     setSplit([]);\n    //     setSeconds('00.00');\n    //     setMinutes('00');\n    //     setStart(false)\n    // }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Stop Watch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stopwatch\",\n        children: [minutes, \":\", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Reset\",\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Split\",\n          onClick: handleSplit,\n          children: \"Split\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Start\",\n          onClick: () => setStart(!start),\n          children: start ? 'Pause' : 'Start'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: split.map(s => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"arr\",\n          children: s\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 27\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/01-starting-setup/src/App.js"],"names":["React","Component","Stopwatch","constructor","startTimer","setState","timerOn","timerTime","state","timerStart","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","render","minutes","seconds","handleReset","handleSplit","setStart","start","split","map","s"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,YAAP;;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACC,SAA9B,CAAuC;AACnCE,EAAAA,WAAW,GAAG;AACV;;AADU,SASlBC,UATkB,GASL,MAAM;AACjB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,IADG;AAEZC,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAFV;AAGZE,QAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL,KAAa,KAAKH,KAAL,CAAWD;AAHxB,OAAd;AAKA,WAAKK,KAAL,GAAaC,WAAW,CAAC,MAAM;AAC7B,aAAKR,QAAL,CAAc;AACZE,UAAAA,SAAS,EAAEG,IAAI,CAACC,GAAL,KAAa,KAAKH,KAAL,CAAWC;AADvB,SAAd;AAGD,OAJuB,EAIrB,EAJqB,CAAxB;AAKD,KApBiB;;AAAA,SAsBdK,SAtBc,GAsBF,MAAM;AACpB,WAAKT,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAS,MAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACD,KAzBiB;;AAAA,SA0BlBI,UA1BkB,GA0BL,MAAM;AACjB,WAAKX,QAAL,CAAc;AACZI,QAAAA,UAAU,EAAE,CADA;AAEZF,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KA/BiB;;AAEV,SAAKC,KAAL,GAAa;AACnBF,MAAAA,OAAO,EAAE,KADU;AAEnBG,MAAAA,UAAU,EAAE,CAFO;AAGnBF,MAAAA,SAAS,EAAE;AAHQ,KAAb;AAKH;;AA2BHU,EAAAA,MAAM,GAAE;AAEV;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,mBAA0BC,OAA1B,OAAoCC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,OAAlB;AAA0B,UAAA,OAAO,EAAEC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAS,UAAA,SAAS,EAAC,OAAnB;AAA0B,UAAA,OAAO,EAAEC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI;AAAQ,UAAA,SAAS,EAAC,OAAlB;AAAyB,UAAA,OAAO,EAAE,MAAIC,QAAQ,CAAC,CAACC,KAAF,CAA9C;AAAA,oBAAyDA,KAAK,GAAC,OAAD,GAAS;AAAvE;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAWQ;AAAA,kBACHC,KAAK,CAACC,GAAN,CAAUC,CAAC,iBAAE;AAAG,UAAA,SAAS,EAAC,KAAb;AAAA,oBAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA,gBAAb;AADG;AAAA;AAAA;AAAA;AAAA,cAXR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAlGsC;;AAoGvC,eAAexB,SAAf","sourcesContent":["import React, {Component} from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.js';\n\nclass Stopwatch extends React.Component{\n    constructor() {\n        super()\n        this.state = {  \n  timerOn: false,\n  timerStart: 0,\n  timerTime: 0\n        }\n    }\n\nstartTimer = () => {\n  this.setState({\n    timerOn: true,\n    timerTime: this.state.timerTime,\n    timerStart: Date.now() - this.state.timerTime\n  });\n  this.timer = setInterval(() => {\n    this.setState({\n      timerTime: Date.now() - this.state.timerStart\n    });\n  }, 10);\n};\n    \n    stopTimer = () => {\n  this.setState({ timerOn: false });\n  clearInterval(this.timer);\n};\nresetTimer = () => {\n  this.setState({\n    timerStart: 0,\n    timerTime: 0\n  });\n};\n\n    \n  render(){\n\n//    const [count,setCount]=useState(0);\n//    const [seconds,setSeconds]=useState('00.00');\n//    const [minutes,setMinutes]=useState('00');\n//    const [start,setStart]=useState(false);\n//    const [split,setSplit]=useState([])\n      \n   \n\n//    useEffect(() => {\n//        let intervalId;\n//        if(start){\n//       intervalId=setInterval(()=>{\n//            setCount(count=>count+1);\n//            var sec=(count/100)\n//            var min=Math.floor(sec/60)\n//            sec=sec%60;\n\n//            setSeconds(sec.toFixed(2).toString().padStart(5,'0'));\n//            setMinutes(min.toString().padStart(2,'0'));\n//       },10);\n//     }\n//        return () => {\n//            clearInterval(intervalId);\n//        }\n//    }, [count,seconds,minutes,start])\n  \n\n    // function handleSplit(){\n        \n    //     const add=minutes+\":\"+seconds;\n    //     if(split[split.length-1]!==add)\n    //     setSplit(split=>[...split,add]);\n        \n    // }\n    // function handleReset(){\n       \n    //     setCount(0);\n    //     setSplit([]);\n    //     setSeconds('00.00');\n    //     setMinutes('00');\n    //     setStart(false)\n        \n    // }\n\n\n    return(\n        <div>\n            <h1>Stop Watch</h1>\n            <hr/>\n            <p className=\"stopwatch\">{minutes}:{seconds}</p>\n            <center>\n                <button className=\"Reset\" onClick={handleReset}>Reset</button>\n\n                <button  className=\"Split\"onClick={handleSplit}>Split</button>\n                \n                <button className=\"Start\"onClick={()=>setStart(!start)}>{start?'Pause':'Start'}</button>\n                </center>\n                <div >\n            {split.map(s=><p className=\"arr\">{s}</p>)}</div>\n        </div>\n    );\n}\n}\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}