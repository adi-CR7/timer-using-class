{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\01-starting-setup\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import ReactDOM from 'react-dom';\n\nimport './index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stopwatch extends Component {\n  constructor() {\n    super();\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        const newTime = this.state.timerTime - 10;\n\n        if (newTime >= 0) {\n          this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            timerOn: false\n          });\n          alert(\"Countdown ended\");\n        }\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          timerTime: this.state.timerStart\n        });\n      }\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n  }\n\n  render() {\n    const {\n      timerTime\n    } = this.state;\n    let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n    let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Stopwatch-display\",\n        children: [hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), this.state.timerOn === false && this.state.timerTime === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this), this.state.timerOn === true && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }, this), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.startTimer,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/01-starting-setup/src/App.js"],"names":["React","Component","Stopwatch","constructor","startTimer","setState","timerOn","timerTime","state","timerStart","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","render","centiseconds","Math","floor","slice","seconds","minutes","hours"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.js';\n\nclass Stopwatch extends Component{\n    constructor() {\n        super()\n        this.state = {  \n  timerOn: false,\n  timerStart: 0,\n  timerTime: 0\n        }\n    }\n\nstartTimer = () => {\n  this.setState({\n    timerOn: true,\n    timerTime: this.state.timerTime,\n    timerStart: this.state.timerTime\n  });\n  this.timer = setInterval(() => {\n    const newTime = this.state.timerTime - 10;\n    if (newTime >= 0) {\n      this.setState({\n        timerTime: newTime\n      });\n    } else {\n      clearInterval(this.timer);\n      this.setState({ timerOn: false });\n      alert(\"Countdown ended\");\n    }\n  }, 10);\n};\n    \n stopTimer = () => {\n  clearInterval(this.timer);\n  this.setState({ timerOn: false });\n};\nresetTimer = () => {\n  if (this.state.timerOn === false) {\n    this.setState({\n      timerTime: this.state.timerStart\n    });\n  }\n};\n\n    \n  render(){\n        const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n\n\n\n\n    return(\n        <div>\n\n            <div className=\"Stopwatch-display\">\n  {hours} : {minutes} : {seconds} : {centiseconds}\n            </div>\n            {this.state.timerOn === false && this.state.timerTime === 0 && (\n  <button onClick={this.startTimer}>Start</button>\n)}\n{this.state.timerOn === true && (\n  <button onClick={this.stopTimer}>Stop</button>\n)}\n{this.state.timerOn === false && this.state.timerTime > 0 && (\n  <button onClick={this.startTimer}>Resume</button>\n)}\n{this.state.timerOn === false && this.state.timerTime > 0 && (\n  <button onClick={this.resetTimer}>Reset</button>\n)}\n        </div>\n    );\n}\n}\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}